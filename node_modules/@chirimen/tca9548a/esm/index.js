export const TCA9548AChannels = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
];
export class TCA9548ANotFoundError extends Error {
    constructor(message) {
        super(message);
        this.name = this.constructor.name;
    }
}
export function TCA9548A(bus, address = 0x70) {
    return {
        i2cSlave: null,
        async init() {
            this.i2cSlave = await bus.open(address);
        },
        async read() {
            try {
                if (this.i2cSlave == null)
                    await this.init();
                if (this.i2cSlave == null)
                    throw "internal error";
            }
            catch (error) {
                throw new TCA9548ANotFoundError(error.stack || error);
            }
            const index = TCA9548AChannels.map((channel) => 1 << channel).indexOf(await this.i2cSlave.readByte());
            return index in TCA9548AChannels ? TCA9548AChannels[index] : null;
        },
        async write(channel = 0) {
            try {
                if (this.i2cSlave == null)
                    await this.init();
                if (this.i2cSlave == null)
                    throw "internal error";
            }
            catch (error) {
                throw new TCA9548ANotFoundError(error.stack || error);
            }
            await this.i2cSlave.writeByte(1 << channel);
        },
    };
}
export default TCA9548A;
